Ref doc: https://oracle-base.com/articles/linux/awx-installation-on-ol7-using-the-docker-compose-method#:~:text=Install%20AWX,Ansible%2C%20PIP%20and%20Git%20packages.&text=Make%20sure%20the%20Python%20libraries,for%20Docker%20and%20Docker%2DCompose.&text=Clone%20the%20AWX%20repository%20and%20switch%20to%20the%20installer%20directory.&text=Amend%20the%20contents%20of%20the,file%20as%20you%20see%20fit.
AWX Installation on Oracle Linux 7 (OL7) Using the Docker-Compose Method
Assumptions
      You have a clean installation of Oracle Linux 7.
      You have at least one spare disk (real or virtual) to act as the "/var/lib/docker" mount point using BTRFS.
      You have a location called "/u01", which is either on a separate disk, or under the "/" mount point. Preferable not the latter.
      All actions performed as the "root" user.
      
Install Docker
      The installation of Docker on Oracle Linux is described in full here. To keep things simple I've abbreviated it here. Some of these actions are destructive, so if in doubt read the related article.

Make sure the relevant repositories are enabled.
      yum install yum-utils zip unzip -y
      yum-config-manager --enable ol7_optional_latest
      yum-config-manager --enable ol7_addons
      yum-config-manager --enable ol7_preview
      yum-config-manager --enable ol7_developer
      yum-config-manager --enable ol7_developer_EPEL

# Enable the Docker service.
      systemctl enable docker.service
      systemctl start docker.service
      systemctl status docker.service
      
      
Install AWX
Install the required Ansible, PIP and Git packages.
      sudo yum install -y ansible python-pip python-devel python3-devel git gcc
      
 Make sure the Python libraries are present for Docker and Docker-Compose.
      sudo pip3 install --upgrade pip
      sudo pip3 install docker
      sudo pip3 install docker-compose
     
 Clone the AWX repository and switch to the installer directory.
      sudo mkdir /u01
      cd /u01/
      sudo git clone https://github.com/ansible/awx.git
      cd awx/installer
     
  You are now in a position to install AWX. Issue the following command to run the installation playbook.
      ansible-playbook -i inventory install.yml
      
    NOTE: Before installing, you can check Amend the contents of the "./inventory" file as you see fit. It includes an assortment of paths and credentials. You could do the run without amending any of these and it will work, but for anything other than a playground it's worth making some changes. Here are some of the obvious things you may want to change.
    You can customize the values in inventory as per need.
    Using sed command you cna do it:
        sed -i -e "s|awx_task_hostname=awx|awx_task_hostname=${AWX_TASK_HOSTNAME}|g" ./inventory
        sed -i -e "s|awx_web_hostname=awxweb|awx_web_hostname=${AWX_WEB_HOSTNAME}|g" ./inventory
        sed -i -e "s|postgres_data_dir=\"~/.awx/pgdocker\"|postgres_data_dir=${POSTGRES_DATA_DIR}|g" ./inventory
        sed -i -e "s|host_port=80|host_port=${HOST_PORT}|g" ./inventory
        sed -i -e "s|host_port_ssl=443|host_port_ssl=${HOST_PORT_SSL}|g" ./inventory
        sed -i -e "s|docker_compose_dir=\"~/.awx/awxcompose\"|docker_compose_dir=${DOCKER_COMPOSE_DIR}|g" ./inventory
        sed -i -e "s|pg_username=awx|pg_username=${PG_USERNAME}|g" ./inventory
        sed -i -e "s|pg_password=awxpass|pg_password=${PG_PASSWORD}|g" ./inventory
        sed -i -e "s|pg_database=awx|pg_database=${PG_DATABASE}|g" ./inventory
        sed -i -e "s|pg_port=5432|pg_port=${PG_PORT}|g" ./inventory
        sed -i -e "s|rabbitmq_password=awxpass|rabbitmq_password=${RABBITMQ_PASSWORD}|g" ./inventory
        sed -i -e "s|admin_user=admin|admin_user=${ADMIN_USER}|g" ./inventory
        sed -i -e "s|admin_password=password|admin_password=${ADMIN_PASSWORD}|g" ./inventory
        sed -i -e "s|secret_key=awxsecret|secret_key=${SECRET_KEY}|g" ./inventory
        sed -i -e "s|#project_data_dir=/var/lib/awx/projects|project_data_dir=${PROJECT_DATA_DIR}|g" ./inventory
        
    Troubleshooting:
        Error: "Aborting, target uses selinux but python bindings (libselinux-python) aren't installed!"} in python3
    
        Solution: sudp pip3 install selinux
